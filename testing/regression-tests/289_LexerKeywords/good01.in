abstract
and
and_eq
as
asm
asr
assert
auto
begin
bitand
bitor
bool
boolean
break
byte
case
catch
char
class
compl
const
const_cast
constraint
continue
data
default
delete
deriving
do
done
double
downto
dynamic_cast
else
end
enum
eof
exception
explicit
extends
extern
external
false
family
final
finally
float
for
forall
foreign
friend
fun
function
functor
goto
hiding
i
if
implements
import
in
include
infix
infixl
infixr
inherit
initializer
inline
instance
instanceof
int
interface
land
lazy
let
list
long
lor
lsl
lsr
lxor
match
mdo
method
mod
module
mutable
namespace
native
new
newtype
nonrec
not
not_eq
null
object
of
open
operator
or
or_eq
package
parse
pattern
private
proc
protected
public
qualified
rec
refill
register
reinterpret_cast
return
rule
short
shortest
sig
signed
sizeof
static_cast
strictfp
string
struct
super
switch
synchronized
template
then
this
throw
throws
to
transient
true
try
type
typedef
typeid
typename
union
unsigned
using
val
virtual
void
volatile
wchar_t
when
where
while
with
xor
xor_eq
